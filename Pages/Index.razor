@page "/"
@using System.Drawing;
@inject IDialogService DialogService


<style>
    :root {
        --mud-palette-primary: #111A28;
        background-color: #2E333C;
    }
</style>

<PageTitle>Index</PageTitle>
<div>
    <MudAppBar Color="MudBlazor.Color.Primary" Class="MudAppBar">
        <MudButton OnClick="tab1" Class="MudButton">
            <MudText Style="font-size: 20px;" Class="Text">Home</MudText>
        </MudButton>
        <MudButton OnClick="tab2" Class="MudButton">
            <MudText Style="font-size: 20px;" Class="Text">Beginner</MudText>
        </MudButton>
        <MudButton OnClick="tab3" Class="MudButton">
            <MudText Style="font-size: 20px;" Class="Text">Intermediate</MudText>
        </MudButton>        
        <MudButton OnClick="tab4" Class="MudButton">
            <MudText Style="font-size: 20px;" Class="Text">Advanced</MudText>
        </MudButton>        

    </MudAppBar>
    @if(home == true)
    {
    <MudAppBar Color="MudBlazor.Color.Primary" Style="margin-top: 40px;" Class="MudAppBar"><MudButton Style="" OnClick="OpenDialog" Class="" ><MudText Class="Text">Select Widgets</MudText></MudButton></MudAppBar>    
    }
    @if(Beginner == true)
    {
    <MudAppBar Color="MudBlazor.Color.Primary" Style="margin-top: 40px;" Class="MudAppBar">
        <MudButton OnClick="Tab_Calculator" Class="MudButton">
            <MudText Class="Text">Calculator</MudText>
        </MudButton>
        <MudButton OnClick="Tab_TemperatureConverter" Class="MudButton">
            <MudText Class="Text">Temperature Converter</MudText>
        </MudButton>
        <MudButton OnClick="Tab_DollarsCentsConverter" Class="MudButton">
            <MudText Class="Text">Dollars to Cents Converter</MudText>
        </MudButton>        
        <MudButton OnClick="Tab_Stopwatch" Class="MudButton">
            <MudText Class="Text">Stopwatch</MudText>
        </MudButton>    
    </MudAppBar>    }
    @if(Intermediate == true)
    {
    <MudAppBar Color="MudBlazor.Color.Primary" Style="margin-top: 40px;" Class="MudAppBar">
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>        
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>    
    </MudAppBar>    }
    @if(Advanced == true)
    {
    <MudAppBar Color="MudBlazor.Color.Primary" Style="margin-top: 40px;" Class="MudAppBar">
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>        
        <MudButton Class="MudButton">
            <MudText Class="Text"></MudText>
        </MudButton>    
    </MudAppBar>    }
</div>
<div>
    @if(home == true) {
    }
    @if(Beginner == true || home == true)
    {
    <div class="MainDiv">
        @if(App_Calculator == true)
        {
            <MudPaper Class="MudPaperCalculator">
                <MudText Style="margin: 5%;">Calculator</MudText>
                <div style="display: flex;">
                    <MudNumericField @bind-Value="App_Calculator_Value1" HideSpinButtons="true" Label="Value 1" Style="margin: 5%;" Variant="Variant.Outlined"/>
                    <MudNumericField @bind-Value="App_Calculator_Value2" HideSpinButtons="true" Label="Value 2" Style="margin: 5%;" Variant="Variant.Outlined"/>
                </div>
                <div style="margin-left: 5%;">
                    <MudButton OnClick="Addition" Class="MudButtonCalculator"><MudText Style="font-size: 20px; color: black;" Class="Text">+</MudText></MudButton>
                    <MudButton OnClick="Subtraction" Class="MudButtonCalculator"><MudText Style="font-size: 20px; color: black;" Class="Text">-</MudText></MudButton>
                    <MudButton OnClick="Multiplication" Class="MudButtonCalculator"><MudText Style="font-size: 20px; color: black;" Class="Text">x</MudText></MudButton>
                    <MudButton OnClick="Division" Class="MudButtonCalculator"><MudText Style="font-size: 20px; color: black;" Class="Text">÷</MudText></MudButton>
                    <MudButton OnClick="App_Calculator_Clear" Class="MudButtonCalculator"><MudText Style="font-size: 20px; color: black;" Class="Text">C</MudText></MudButton>
                </div>
                <MudTextField @bind-Value="App_Calculator_Output" ReadOnly="true" Variant="Variant.Outlined" Style="margin: 5%;" ></MudTextField>
            </MudPaper> 
        }
        @if(App_TemperatureConverter == true)
        {
            <MudPaper Outlined="false" Elevation="1" Class="MudPaperTemperatureConverter">
                <MudText Style="margin: 5%;">Temperature Converter</MudText>
                <div style="display: flex;">
                    <div style="margin-left: 5%;">
                    <MudTextField @bind-Value="App_TemperatureConverter_Value1" MaxLength="7" ReadOnly="false" Variant="Variant.Outlined" Style="margin: 5%;" ></MudTextField>
                    <MudSelect @bind-Value="TempValue1" Margin="Margin.Dense" T="string" Variant="Variant.Outlined">
                        <MudSelectItem Value="@("Fahrenheit")" />
                        <MudSelectItem Value="@("Celsius")" />
                        <MudSelectItem Value="@("Kelvin")" />
                    </MudSelect>    
                    </div>
                    <div style="margin-left: 5%;">
                    <MudTextField @bind-Value="App_TemperatureConverter_Value2" MaxLength="7" ReadOnly="true" Variant="Variant.Outlined" Style="margin: 5%;" ></MudTextField>
                    <MudSelect @bind-Value="TempValue2" Margin="Margin.Dense" T="string" Variant="Variant.Outlined">
                        <MudSelectItem Value="@("Fahrenheit")" />
                        <MudSelectItem Value="@("Celsius")" />
                        <MudSelectItem Value="@("Kelvin")" />
                    </MudSelect>                
                    </div>
                </div>
                <div>
                    <MudButton OnClick="ConvertTemp" Style="margin: 5%;" >Convert</MudButton>
                </div>
            </MudPaper>         }
        @if(App_DollarsCentsConverter == true)
        {
        <MudPaper Outlined="false" Elevation="1" Class="MudPaperDollarCentsConverter">
            <MudText Style="margin: 5%;">Dollars to Cents Converter</MudText>
            <div style="justify-content: center; padding: 10%;">
                <MudTextField @bind-Value="DollarAmount" Label="Enter $ Amount" Variant="Variant.Outlined"/>
                <MudButton Style="margin: 5%;" OnClick="ConvertDollars">Convert</MudButton>
                <MudTextField ReadOnly="true" T="string" Variant="Variant.Outlined" Text="@OutcomeStatement" Lines="3" />
            </div> 
        </MudPaper> 
        }
        @if(App_Stopwatch == true)
        {
        <MudPaper Outlined="false" Elevation="1" Class="MudPaperStopwatch">
            <MudText Style="margin: 5%;">Stopwatch</MudText>
            <div style="display: flex; justify-content: center;">
            <MudText Style="font-size: 36px;">@displaytimer</MudText>
            </div>
            <div style="display: flex; justify-content: center;">
            <MudButton Style="margin: 5%;" Disabled="@isTiming" OnClick="StopwatchTiming">Start</MudButton>
            <MudButton Style="margin: 5%;" Disabled="@isStopped" OnClick="StopwatchStop">Stop</MudButton>
            </div>
        </MudPaper> 
        }
    </div> 
    }
    @if(Intermediate == true)
    {
    <MudPaper Outlined="false" Elevation="0" Class="MudPaper">Intermediate</MudPaper> 
    }
    @if(Advanced == true)
    {
    <MudPaper Outlined="false" Elevation="1" Class="MudPaper">Advanced</MudPaper> 
    }
</div>

<MudDialog @bind-IsVisible="visible" Options="dialogOptions">
    <TitleContent>
    Select Widgets
    </TitleContent>
    <DialogContent>
        <MudCheckBox @bind-Checked="@App_Calculator" Label="Calculator"></MudCheckBox>
        <MudCheckBox @bind-Checked="@App_TemperatureConverter" Label="Temperature Converter"></MudCheckBox>
        <MudCheckBox @bind-Checked="@App_DollarsCentsConverter" Label="Dollars to Cents Converter"></MudCheckBox>
        <MudCheckBox @bind-Checked="@App_Stopwatch" Label="Stopwatch"></MudCheckBox>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Filled" OnClick="Submit" Class="px-10">Close</MudButton>
    </DialogActions>
</MudDialog>
@code {
    private bool visible;
    private int rating;
    private void OpenDialog() => visible = true;
    void Submit() => visible = false;
    private DialogOptions dialogOptions = new() { FullWidth = true };

    private bool home = true;
    private bool Beginner = false;
    private bool Intermediate = false;
    private bool Advanced = false;

    //Apps
    //Calculator
    private bool App_Calculator = false;
    double App_Calculator_Value1 = 0;
    double App_Calculator_Value2 = 0;
    double App_Calculator_Output = 0;
    private void Addition()
    {
        App_Calculator_Output = App_Calculator_Value1 + App_Calculator_Value2;
    }
    private void Subtraction()
    {
        App_Calculator_Output = App_Calculator_Value1 - App_Calculator_Value2;
    }
    private void Multiplication()
    {
        App_Calculator_Output = App_Calculator_Value1 * App_Calculator_Value2;
    }
    private void Division()
    {
        App_Calculator_Output = App_Calculator_Value1 / App_Calculator_Value2;
    }
    private void App_Calculator_Clear()
    {
        App_Calculator_Output = 0;
        App_Calculator_Value1 = 0;
        App_Calculator_Value2 = 0;
    }
    //Temperature Converter
    private bool App_TemperatureConverter = false;
    double App_TemperatureConverter_Value1 = 0;
    double App_TemperatureConverter_Value2 = 0;
    private string TempValue1 { get; set; } = "Fahrenheit";
    private string TempValue2 { get; set; } = "Celsius";
    private void ConvertTemp()
    {
        if(TempValue1 == "Fahrenheit" && TempValue2 == "Fahrenheit")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
        }
        if(TempValue1 == "Fahrenheit" && TempValue2 == "Celsius")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 - 32;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 * 5/9;
        }
        if(TempValue1 == "Fahrenheit" && TempValue2 == "Kelvin")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 - 32;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 * 5/9;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 + 273.15;
        }
        if(TempValue1 == "Celsius" && TempValue2 == "Fahrenheit")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 * 9/5;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 + 32;
        }
        if(TempValue1 == "Celsius" && TempValue2 == "Celsius")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
        }
        if(TempValue1 == "Celsius" && TempValue2 == "Kelvin")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 + 273.15;
        }
        if(TempValue1 == "Kelvin" && TempValue2 == "Fahrenheit")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 - 273.15;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 * 9/5;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 + 32;
        }
        if(TempValue1 == "Kelvin" && TempValue2 == "Celsius")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value2 - 273.15;
        }
        if(TempValue1 == "Kelvin" && TempValue2 == "Kelvin")
        {
            App_TemperatureConverter_Value2 = App_TemperatureConverter_Value1;
        }
    }
    //Dollars to Cents Converter
    private bool App_DollarsCentsConverter = false;
    double DollarAmount = 0;
    double quarters = 0;
    private string Cents { get; set; } = "";
    private string OutcomeStatement { get; set; } = "";

    private void ConvertDollars()
    {
        Cents = String.Format("{0:0.00}", DollarAmount);
        Cents = Cents.Replace("0.0", "");
        Cents = Cents.Replace(".0", "");
        Cents = Cents.Replace(".", "");
        OutcomeStatement = "You have " + Cents + " cents.";

        //int total = Convert.ToInt32(DollarAmount);
        //for (int q = 0; q <= total / 25; q++)
        //{
        //    int total_less_q = total - q * 25;
        //    for (int d = 0; d <= total_less_q / 10; d++)
        //    {
        //        int total_less_q_d = total_less_q - d * 10;
        //        for (int n = 0; n <= total_less_q_d / 5; n++)
        //        {
        //            int p = total_less_q_d - n * 5;
        //            OutcomeStatement = "You have " + Cents + " cents. This is " + q + " Quarters, " + d + " Dimes, " + n + " Nickels, and " + p + "Pennies.";
        //        }
        //    }
        //}

    }
    //Stopwatch
    private bool App_Stopwatch = false;
    private bool isTiming = false;
    private bool isStopped = true;
    string displaytimer = "00:00:00"; //displayed time
    TimeSpan TimeFromZero;
    async Task StopwatchTiming() { //Stopwatch task
        displaytimer = "00:00:00";
        isStopped = false;
        TimeFromZero = new TimeSpan(0, 0, 0); //Timespan 
        isTiming = true;
        while (isTiming) { //While stopwatch is running
            await Task.Delay(1000);
            if (isTiming)
            {
                TimeFromZero = TimeFromZero.Add(new TimeSpan(0, 0, 1)); //Add one second while stopwatch is running
                displaytimer = TimeFromZero.ToString();
                StateHasChanged();
            }
        }
    }
    void StopwatchStop()
    {
        isTiming = false;
        isStopped = true;
    }
    private void tab1() {
        AllTabsFalse();
        AllBeginnerTabsFalse();
        home = true;
    }
    private void tab2() {
        AllTabsFalse();
        Beginner = true;
    }
    private void tab3() {
        AllTabsFalse();
        Intermediate = true;
    }
    private void tab4() {
        AllTabsFalse();
        Advanced = true;    
    }

    private void Tab_Calculator() {
        AllBeginnerTabsFalse();
        App_Calculator = true;
    }
    private void Tab_TemperatureConverter() {
        AllBeginnerTabsFalse();
        App_TemperatureConverter = true;
    }
    private void Tab_DollarsCentsConverter() {
        AllBeginnerTabsFalse();
        App_DollarsCentsConverter = true;
    }
    private void Tab_Stopwatch() {
        AllBeginnerTabsFalse();
        App_Stopwatch = true;    
    }
    private void AllTabsFalse() {
        home = false;
        Beginner = false;
        Intermediate = false;
        Advanced = false; 
    }
    private void AllBeginnerTabsFalse()
    {
        App_Calculator = false;
        App_TemperatureConverter = false;
        App_DollarsCentsConverter = false;
        App_Stopwatch = false;
    }
}